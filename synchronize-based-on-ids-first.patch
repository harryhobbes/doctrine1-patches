Index: Doctrine/lib/Doctrine/Collection.php
===================================================================
--- Doctrine.orig/lib/Doctrine/Collection.php	2009-12-08 00:00:05.000000000 +0200
+++ Doctrine/lib/Doctrine/Collection.php	2010-01-07 14:38:21.758919379 +0200
@@ -785,6 +785,18 @@
         }
     }
 
+    private function getCompositeKey($record)
+    {
+        $composite = array();
+        foreach ((array) $this->_table->getIdentifier() as $keyPart) {
+            if (!isset($record[$keyPart])) {
+                return false;
+            }
+            $composite[] = $record[$keyPart];
+        }
+        return join('-', $composite);
+    }
+
     /**
      * synchronizes a Doctrine_Collection with data from an array
      *
@@ -796,18 +808,48 @@
      */
     public function synchronizeWithArray(array $array)
     {
+        $idArray = array();
+        $syncedList = array();
+
+        // first synchronize records with matching identifier (single-column PK supported only)
+
+        // build map of data that can be synchronized using identifier
+        foreach ($array as $key => $record) {
+            $composite = $this->getCompositeKey($record);
+            if ($composite !== false) {
+                $idArray[$composite] = $key;
+            }
+        }
+
+        // synchronize all that can be synchronized based on identifier
+        if ($idArray) {
+            foreach ($this as $key => $record) {
+                $recId = $this->getCompositeKey($record);
+                if ($recId !== false && isset($idArray[$recId])) {
+                    $arrayKey = $idArray[$recId];
+                    $record->synchronizeWithArray($array[$arrayKey]);
+                    unset($array[$arrayKey]);
+                    $syncedList[$key] = true;
+                }
+            }
+        }
+
+        // synchronize the rest of data
         foreach ($this as $key => $record) {
-            if (isset($array[$key])) {
-                $record->synchronizeWithArray($array[$key]);
-                unset($array[$key]);
-            } else {
-                // remove records that don't exist in the array
-                $this->remove($key);
+            if (!isset($syncedList[$key])) {
+                if (isset($array[$key])) {
+                    $record->synchronizeWithArray($array[$key]);
+                    unset($array[$key]);
+                } else {
+                    // remove records that don't exist in the array
+                    $this->remove($key);
+                }
             }
         }
+
         // create new records for each new row in the array
-        foreach ($array as $rowKey => $row) {
-            $this[$rowKey]->fromArray($row);
+        foreach ($array as $row) {
+            $this->get(null)->fromArray($row);
         }
     }
 
